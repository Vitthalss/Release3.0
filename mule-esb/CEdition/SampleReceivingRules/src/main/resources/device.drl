package com.phoenix
import org.mule.MessageExchangePattern;
import com.phoenix.Device;
 
global org.mule.module.bpm.MessageService mule;
 
dialect "mvel"
 
declare Device
    @role('event')
end
 

rule "Rule for Salvage"
    	lock-on-active
	when
		$device: Device(isImeiValid == true  &&  isRmaNumberValid == true &&  inWarranty == true &&  findMyiPhone == true)
	then
		modify($device) {wipe = true,diagnostic = false, destination = "Salvage"}
end

rule "Rule for OEM"
    	lock-on-active
	when
		$device: Device (isImeiValid == true  &&  isRmaNumberValid == true  &&  inWarranty == false  && findMyiPhone == false)
	then
	    modify($device) {wipe = false,diagnostic = true, destination = "OEM"}
end


rule "Rule for Reman"
    	lock-on-active
	when
		$device: Device (isImeiValid == true && isRmaNumberValid == true && inWarranty == false  && findMyiPhone == true)
	then
		modify($device) {wipe = true,diagnostic = true, destination = "Reman"}
	
end

rule "Rule for invalid imei"
    	lock-on-active
	when
		$device: Device (isImeiValid == false)
	then
		modify($device) {wipe = false,diagnostic = false, destination = "IMEI Exception"}
		
end

rule "Rule for invalid RMA Number"
    	lock-on-active
	when
		$device: Device (isRmaNumberValid == false)
	then
		modify($device) {wipe = false,diagnostic = false, destination = "RMA Exception"}
		
end

rule "Rule for invalid Destination"
    	lock-on-active
	when
		$device: Device (inWarranty == true  && findMyiPhone == false)
	then
		modify($device) {wipe = false,diagnostic = false, destination = "Destination Exception"}
		
end